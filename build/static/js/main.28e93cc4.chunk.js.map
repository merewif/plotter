{"version":3,"sources":["imgs/tied-scroll.png","components/character/CharacterDisplay.js","components/character/CharacterInput.js","components/character/CharacterCreationNavigation.js","MoodBoard.js","components/character/CharacterCreation.js","components/character/CharacterFetch.js","components/character/CharacterStorage.js","components/character/CharacterOptions.js","Characters.js","components/plot/Plotsidebar.js","components/plot/PlotCreateBook.js","components/plot/PlotChart.js","components/plot/PlotChaptersView.js","components/plot/PlotBooksView.js","components/plot/PlotArcs.js","Plot.js","components/worldbuilding/WorldbuidlingNav.js","components/worldbuilding/WorldbuildingSidebar.js","components/worldbuilding/Art.js","components/worldbuilding/LegendsAndReligions.js","components/worldbuilding/LocationsAndSettings.js","components/worldbuilding/Geography.js","components/worldbuilding/FloraAndFauna.js","components/worldbuilding/RacesNationsCultures.js","components/worldbuilding/History.js","components/worldbuilding/PoliticsAndEconomics.js","components/worldbuilding/ItemsAndTechnology.js","components/worldbuilding/SkillsAndSpells.js","components/worldbuilding/MagicSystems.js","components/worldbuilding/Professions.js","Worldbuilding.js","Menu.js","App.js","index.js","imgs/moodboard.png"],"names":["module","exports","CharacterDisplay","currentCharacter","editable","id","className","characterName","contentEditable","suppressContentEditableWarning","characterAppearance","characterMonologue","characterGoals","characterTraits","CharacterInput","labelid","textInput","textareaClass","buttonText","handleClick","placeholder","type","onChange","CharacterCreationNavigation","nameInput","appearanceInput","goalsInput","traitsInput","monologueInput","saveCharacter","saveButtonText","onClick","icon","faSave","MoodBoard","props","useState","input","setInput","imgArray","setImgArray","faTrashAlt","deleteButton","setDeleteButton","imported","setImported","useEffect","images","map","image","key","src","event","target","value","onSubmit","e","preventDefault","ChangeData","$","val","slice","faCheckCircle","setTimeout","Charactercreation","setLabel","setLabeld","text","setText","name","setName","looks","setLooks","goals","setGoals","traits","setTraits","monologue","setMonologue","display","setDisplay","setTextareaClass","setSaveButtonText","characterImages","setCharacterImages","css","background","color","show","length","hide","newCharacter","localStorage","setItem","replace","toLowerCase","JSON","stringify","CharacterFetch","charID","displayCharacter","getItem","parse","parseCharacter","deleteButtonText","changedCharacter","deleteCharacter","Characterstorage","cleared","setCleared","Object","keys","array","setArray","currentChar","setCurrentChar","isFetched","setIsFetched","fetchCharacter","storedchar","books","clear","removeItem","CharacterOptions","navigate","useNavigate","modulChoice","top","height","padding","border","path","element","CharacterCreation","CharacterStorage","Characters","Plotsidebar","currentlyOpenedBook","currentlyOpenedChapter","summary","setSummary","storedBooks","setStoredBooks","summaryInput","setSummaryInput","setButtonText","style","fontFamily","margin","newBookData","chaptersContent","CreateBook","bookCount","savedBookNames","chartData","role","p","html","bookCounter","setBookCounter","newBooks","setNewBooks","saveBookName","bookid","inputField","document","getElementById","chapters","Array","i","PlotChart","setFetchBook","setChartData","saveChart","stakes","setStakes","percentage","setPercentage","comment","setComment","chartType","data","options","title","titleTextStyle","bold","italic","curveType","legend","position","width","colors","vAxis","baseline","fontName","fontSize","tooltip","trigger","textStyle","selectionMode","aggregationTarget","animation","duration","easing","enableInteractivity","hAxis","gridlines","pointShape","pointSize","pointsVisible","newData","Number","ChaptersView","setCurrentlyOpenedBook","setCurrentlyOpenedChapter","chapterCount","setChapterCount","currentBook","setCurrentBook","currentChapter","setCurrentChapter","chartDefaultData","chartSavedData","setChartSavedData","setChartNewData","chapterImages","setChapterImages","showMoodboard","setShowMoodboard","fetchChapterList","fetchChapter","sort","index","BooksView","fetchBook","clickTarget","setClickTarget","chartContainerStyle","setChartContainerStyle","fetchChart","newStoredData","StoryArcs","displayView","setDisplayView","Plot","setBookCount","setSavedBookNames","setSavedChapterCount","setButtonStyle","removeClass","addClass","obj","titlesArray","chaptersArray","book","push","class","WorldbuildingNav","setCurrentlyOpenedModule","setWorldbuildingObject","worldbuilding","WorldbuildingSidebar","setCurrentlyOpenedItem","addItem","itemid","console","log","Art","worldbuildingObject","art","moduleData","setModuleData","currentlyOpenedItem","itemImages","setItemImages","saveChangedItem","newObject","artist","description","lore","keyname","Math","floor","random","artis","moodboardImage","defaultValue","marginTop","href","left","transform","storedObject","marginLeft","textAlign","LegendsAndReligions","LocationsAndSettings","Geography","FloraAndFauna","RacesNationsCultures","History","PoliticsAndEconomics","ItemsAndTechnology","itemsAndTechnology","setItemsAndTechnology","scrollImage","SkillsAndSpells","MagicSystems","Professions","Worldbuilding","item1","legendsAndReligions","appearance","evolutuion","utility","locationsAndSettings","geography","floraAndFauna","racesNationsCultures","history","politicsAndEconomics","skillsAndSpells","magicSystems","professions","Menu","current","removeAttr","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.28e93cc4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tied-scroll.dba121e1.png\";","import React, { useState } from \"react\";\r\n\r\nconst CharacterDisplay = ({ currentCharacter, editable }) => {\r\n  return (\r\n    <div>\r\n      <div id=\"display-fetched-character\">\r\n        <div id=\"display-name\" className=\"display-current-character-element\">\r\n          <p>\r\n            <b>Name: </b>\r\n          </p>\r\n          <p id=\"fetched-character-name\" className=\"fetched-attribute\">\r\n            {currentCharacter.characterName}\r\n          </p>\r\n        </div>\r\n        <div\r\n          id=\"display-appearance\"\r\n          className=\"display-current-character-element\"\r\n        >\r\n          <p>\r\n            <b>Physical description: </b>\r\n          </p>\r\n          <p\r\n            id=\"fetched-character-appearance\"\r\n            className=\"fetched-attribute\"\r\n            contentEditable={editable}\r\n            suppressContentEditableWarning={true}\r\n          >\r\n            {currentCharacter.characterAppearance}\r\n          </p>\r\n        </div>\r\n        <div\r\n          id=\"display-monologue\"\r\n          className=\"display-current-character-element\"\r\n        >\r\n          <p>\r\n            <b>Monologue: </b>\r\n          </p>\r\n          <p\r\n            id=\"fetched-character-monologue\"\r\n            className=\"fetched-attribute\"\r\n            contentEditable={editable}\r\n            suppressContentEditableWarning={true}\r\n          >\r\n            {currentCharacter.characterMonologue}\r\n          </p>\r\n        </div>\r\n        <div id=\"display-goals\" className=\"display-current-character-element\">\r\n          <p>\r\n            <b>Goals and Struggles: </b>\r\n          </p>\r\n          <p\r\n            id=\"fetched-character-goals\"\r\n            className=\"fetched-attribute\"\r\n            contentEditable={editable}\r\n            suppressContentEditableWarning={true}\r\n          >\r\n            {currentCharacter.characterGoals}\r\n          </p>\r\n        </div>\r\n        <div id=\"display-traits\" className=\"display-current-character-element\">\r\n          <p>\r\n            <b>Flaws and Virtues: </b>\r\n          </p>\r\n          <p\r\n            id=\"fetched-character-traits\"\r\n            className=\"fetched-attribute\"\r\n            contentEditable={editable}\r\n            suppressContentEditableWarning={true}\r\n          >\r\n            {currentCharacter.characterTraits}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterDisplay;\r\n","import React, { useState } from \"react\";\r\nimport $ from \"jquery\";\r\nimport CharacterCreation from \"./CharacterCreation\";\r\n\r\nconst CharacterInput = ({\r\n  labelid,\r\n  textInput,\r\n  buttonText,\r\n  handleClick,\r\n  textareaClass,\r\n}) => {\r\n  return (\r\n    <form id=\"character-creation-form\">\r\n      <label>\r\n        <textarea\r\n          placeholder=\"Click here and start typing...\"\r\n          type=\"text\"\r\n          id={labelid}\r\n          className={textareaClass}\r\n          onChange={textInput}\r\n        ></textarea>\r\n      </label>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CharacterInput;\r\n","import React, { useState } from \"react\";\r\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport CharacterCreation from \"./CharacterCreation\";\r\n\r\nconst CharacterCreationNavigation = ({\r\n  nameInput,\r\n  appearanceInput,\r\n  goalsInput,\r\n  traitsInput,\r\n  monologueInput,\r\n  saveCharacter,\r\n  saveButtonText,\r\n}) => {\r\n  return (\r\n    <div id=\"character-creation-navigation\">\r\n      <button className=\"character-creation-button\" onClick={nameInput}>\r\n        Name\r\n      </button>\r\n      <button className=\"character-creation-button\" onClick={appearanceInput}>\r\n        Physical Description\r\n      </button>\r\n      <button className=\"character-creation-button\" onClick={goalsInput}>\r\n        Goals and Struggles\r\n      </button>\r\n      <button className=\"character-creation-button\" onClick={traitsInput}>\r\n        Flaws and Virtues\r\n      </button>\r\n      <button className=\"character-creation-button\" onClick={monologueInput}>\r\n        Monologue\r\n      </button>\r\n      <button\r\n        className=\"character-creation-save-button\"\r\n        onClick={saveCharacter}\r\n      >\r\n        <FontAwesomeIcon icon={faSave} id=\"fa-icon\" />\r\n        {saveButtonText}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterCreationNavigation;\r\n\r\n/* \r\n\r\n*/\r\n","import React, { useState, useEffect } from \"react\";\r\nimport $ from \"jquery\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faSave,\r\n  faCheckCircle,\r\n  faTrashAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst MoodBoard = (props) => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [imgArray, setImgArray] = useState([\"https://i.imgur.com/w1AGMhl.png\"]);\r\n  const [deleteButton, setDeleteButton] = useState(\r\n    <FontAwesomeIcon icon={faTrashAlt} id=\"fa-icon\" />\r\n  );\r\n\r\n  const [imported, setImported] = useState(0);\r\n\r\n  useEffect(function importImages() {\r\n    if (\"images\" in props && imported === 0) {\r\n      setImgArray(props.images);\r\n      setImported(1);\r\n    }\r\n  });\r\n\r\n  function currentUrl(event) {\r\n    setInput(event.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setImgArray((imgArray) => [...imgArray, input]);\r\n    props.ChangeData([...imgArray, input]);\r\n    $(\"#image-input\").val(\"\");\r\n    setInput(\"\");\r\n  }\r\n\r\n  function deleteLast(e) {\r\n    e.preventDefault();\r\n    setImgArray(imgArray.slice(0, -1));\r\n    props.ChangeData(imgArray.slice(0, -1));\r\n\r\n    setDeleteButton(<FontAwesomeIcon icon={faCheckCircle} id=\"fa-icon\" />);\r\n    setTimeout(() => {\r\n      setDeleteButton(<FontAwesomeIcon icon={faTrashAlt} id=\"fa-icon\" />);\r\n    }, 1000);\r\n  }\r\n\r\n  return (\r\n    <section id=\"character-sidebar\" className=\"left-side\">\r\n      <p>Moodboard</p>\r\n      <div id=\"moodboard-container\"></div>\r\n      <div id=\"moodboard\">\r\n        {imgArray.map(function (image) {\r\n          return <img className=\"moodboard-image\" key={image} src={image} />;\r\n        })}\r\n\r\n        <input\r\n          type=\"text\"\r\n          id=\"image-input\"\r\n          placeholder=\"Paste image link here\"\r\n          onChange={currentUrl}\r\n        />\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <button id=\"submit-image\" type=\"submit\">\r\n            Submit\r\n          </button>\r\n        </form>\r\n\r\n        <button onClick={deleteLast} id=\"reset-moodboard\">\r\n          {deleteButton}\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MoodBoard;\r\n","import React, { useState } from \"react\";\r\nimport $ from \"jquery\";\r\nimport CharacterDisplay from \"./CharacterDisplay\";\r\nimport CharacterInput from \"./CharacterInput\";\r\nimport CharacterCreationNavigation from \"./CharacterCreationNavigation\";\r\nimport MoodBoard from \"../../MoodBoard\";\r\n\r\nconst Charactercreation = () => {\r\n  const [buttonText, setButtonText] = useState(\"Submit\");\r\n  const [label, setLabel] = useState(\"Name\");\r\n  const [labelid, setLabeld] = useState(\"name\");\r\n  const [input, setInput] = useState(\"\");\r\n  const [text, setText] = useState(\r\n    \"First things first, tell me the name of your character.\"\r\n  );\r\n  const [name, setName] = useState(\"\");\r\n  const [nameFormatted, setNameFormatted] = useState(\"\");\r\n  const [looks, setLooks] = useState(\"\");\r\n  const [goals, setGoals] = useState(\"\");\r\n  const [traits, setTraits] = useState(\"\");\r\n  const [monologue, setMonologue] = useState(\"\");\r\n  const [currentCharacter, setCurrentCharacter] = useState({\r\n    characterName: \"\",\r\n    characterAppearance: \"\",\r\n    characterGoals: \"\",\r\n    characterMonologue: \"\",\r\n    characterTraits: \"\",\r\n  });\r\n  // const [savedCharacters, setSavedCharacters] = useState([]);\r\n  const [display, setDisplay] = useState(\"\");\r\n  const [textareaClass, setTextareaClass] = useState(\"textarea-name\");\r\n  const [saveButtonText, setSaveButtonText] = useState(\"Save character\");\r\n  const [characterImages, setCharacterImages] = useState([]);\r\n\r\n  function nameInput(event) {\r\n    $(\".character-creation-button\").css({\r\n      background: \"white\",\r\n      color: \"black\",\r\n    });\r\n    $(event.target).css({ background: \"black\", color: \"white\" });\r\n\r\n    $(\".textarea\").show();\r\n    setText(\"First things first, tell me the name of your character.\");\r\n    setTextareaClass(\"textarea-name\");\r\n    setDisplay(\"\");\r\n\r\n    setLabeld(\"name\");\r\n    $(\"textarea\").val(name);\r\n  }\r\n\r\n  function appearanceInput(event) {\r\n    $(\".character-creation-button\").css({\r\n      background: \"white\",\r\n      color: \"black\",\r\n    });\r\n    $(event.target).css({ background: \"black\", color: \"white\" });\r\n\r\n    $(\".textarea\").show();\r\n    setDisplay(\"\");\r\n\r\n    setTextareaClass(\"textarea-text\");\r\n    setLabeld(\"looks\");\r\n    setText(\r\n      \"Now tell me everything about how they look like. Try to describe them from the perspective of a stranger who is looking at your character for the first time.\"\r\n    );\r\n\r\n    $(\"textarea\").val(looks);\r\n  }\r\n\r\n  function goalsInput(event) {\r\n    $(\".character-creation-button\").css({\r\n      background: \"white\",\r\n      color: \"black\",\r\n    });\r\n    $(event.target).css({ background: \"black\", color: \"white\" });\r\n\r\n    $(\"textarea\").show();\r\n    setDisplay(\"\");\r\n\r\n    setTextareaClass(\"textarea-text\");\r\n    setLabeld(\"goals\");\r\n    setText(\r\n      \"Now tell me all about the goals and struggles your character faces. Every interesting character has something to fight for and strive towards. What's yours'? Why are they motivated to achieve their goals? What obstacles stand in their way?\"\r\n    );\r\n\r\n    $(\"textarea\").val(goals);\r\n  }\r\n\r\n  function traitsInput(event) {\r\n    $(\".character-creation-button\").css({\r\n      background: \"white\",\r\n      color: \"black\",\r\n    });\r\n    $(event.target).css({ background: \"black\", color: \"white\" });\r\n\r\n    $(\".textarea\").show();\r\n    setTextareaClass(\"textarea-text\");\r\n    setDisplay(\"\");\r\n\r\n    setLabel(\"Flaws and Virtues ✔\");\r\n    setLabeld(\"traits\");\r\n    setText(\r\n      \"Now think about the moral aspect of your character. Assemble a list of their moral flaws and moral virtues,their secrets and their inner needs. Morality is a complicated subject and if you feel like you don't know where to begin, consult a list of aristotelian virtues and vices for inspiration. Keep in mind that by defining their flaws, you are defining the start of their character arc, the baseline from which they will change into someone else, and by defining their virtues, you are defining the means by which your character changes.\"\r\n    );\r\n\r\n    $(\"textarea\").val(traits);\r\n  }\r\n\r\n  function monologueInput(event) {\r\n    $(\".character-creation-button\").css({\r\n      background: \"white\",\r\n      color: \"black\",\r\n    });\r\n    $(event.target).css({ background: \"black\", color: \"white\" });\r\n\r\n    $(\".textarea\").show();\r\n    setTextareaClass(\"textarea-text\");\r\n    setDisplay(\"\");\r\n\r\n    setLabel(\"Monologue ✔\");\r\n    setLabeld(\"monologue\");\r\n    setText(\r\n      \"Write a monologue with your character's voice, exploring their speech patterns and spoken mannerisms.\"\r\n    );\r\n\r\n    $(\"textarea\").val(monologue);\r\n  }\r\n\r\n  function saveCharacter() {\r\n    if (name.length === 0) {\r\n      setSaveButtonText(\"Name required\");\r\n      setTimeout(() => {\r\n        setSaveButtonText(\"Save character\");\r\n      }, 2000);\r\n      return;\r\n    }\r\n\r\n    $(\"textarea\").hide();\r\n    setText(\"Just a moment...\");\r\n    setSaveButtonText(\"Saving...\");\r\n\r\n    const regex = /[\\r\\n]+/gm;\r\n    let newCharacter = {\r\n      characterName: name,\r\n      characterAppearance: looks,\r\n      characterGoals: goals,\r\n      characterMonologue: monologue,\r\n      characterTraits: traits,\r\n      images: characterImages,\r\n    };\r\n\r\n    setTimeout(() => {\r\n      localStorage.setItem(\r\n        name.replace(/\\s+/g, \"-\").toLowerCase(),\r\n        JSON.stringify(newCharacter) + \",\"\r\n      );\r\n    }, 2000);\r\n    setTimeout(() => {\r\n      setDisplay(\r\n        <CharacterDisplay currentCharacter={newCharacter} editable={\"false\"} />\r\n      );\r\n\r\n      // setSavedCharacters([...savedCharacters, { newCharacter }]);\r\n      characterSaved();\r\n    }, 500);\r\n  }\r\n\r\n  function characterSaved() {\r\n    setTimeout(() => {\r\n      setText(\r\n        \"All done! You'll be able to access and edit your character information later.\"\r\n      );\r\n      setSaveButtonText(\"Save character\");\r\n    }, 2000);\r\n\r\n    setInput(\"\");\r\n  }\r\n\r\n  function textInput(event) {\r\n    if (event.target.id === \"name\") {\r\n      setName(event.target.value);\r\n    } else if (event.target.id === \"looks\") {\r\n      setLooks(event.target.value);\r\n    } else if (event.target.id === \"goals\") {\r\n      setGoals(event.target.value);\r\n    } else if (event.target.id === \"traits\") {\r\n      setTraits(event.target.value);\r\n    } else if (event.target.id === \"monologue\") {\r\n      setMonologue(event.target.value);\r\n    } else return;\r\n  }\r\n\r\n  return (\r\n    <div id=\"character-creation\">\r\n      <div>{display}</div>\r\n\r\n      <div>\r\n        <MoodBoard\r\n          ChangeData={(characterImages) => setCharacterImages(characterImages)}\r\n        />\r\n      </div>\r\n\r\n      <p id=\"character-prompt\">{text}</p>\r\n      <div>\r\n        <CharacterInput\r\n          labelid={labelid}\r\n          buttonText={buttonText}\r\n          textareaClass={textareaClass}\r\n          textInput={textInput}\r\n        />\r\n      </div>\r\n      <CharacterCreationNavigation\r\n        nameInput={nameInput}\r\n        appearanceInput={appearanceInput}\r\n        goalsInput={goalsInput}\r\n        traitsInput={traitsInput}\r\n        monologueInput={monologueInput}\r\n        saveCharacter={saveCharacter}\r\n        saveButtonText={saveButtonText}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Charactercreation;\r\n","import React, { useState } from \"react\";\r\nimport $ from \"jquery\";\r\nimport CharacterDisplay from \"./CharacterDisplay\";\r\nimport MoodBoard from \"../../MoodBoard\";\r\n\r\nconst CharacterFetch = (props) => {\r\n  const charID = props.charID;\r\n  const displayCharacter = localStorage.getItem(charID).slice(0, -1);\r\n  const [parseCharacter, setParseCharacter] = useState(\r\n    JSON.parse(displayCharacter)\r\n  );\r\n\r\n  const [saveButtonText, setSaveButtonText] = useState(\"Save your changes\");\r\n  const [deleteButtonText, setDeleteButtonText] = useState(\r\n    \"Delete this character\"\r\n  );\r\n\r\n  const [characterImages, setCharacterImages] = useState([]);\r\n\r\n  function saveChanges() {\r\n    let changedCharacter = {\r\n      characterName: $(\"#fetched-character-name\").text(),\r\n      characterAppearance: $(\"#fetched-character-appearance\").text(),\r\n      characterGoals: $(\"#fetched-character-goals\").text(),\r\n      characterTraits: $(\"#fetched-character-traits\").text(),\r\n      characterMonologue: $(\"#fetched-character-monologue\").text(),\r\n      images: characterImages,\r\n    };\r\n\r\n    let name = props.charID;\r\n\r\n    localStorage.setItem(name, JSON.stringify(changedCharacter) + \",\");\r\n\r\n    setSaveButtonText(\"Saved\");\r\n    setTimeout(() => {\r\n      setSaveButtonText(\"Save your changes\");\r\n    }, 1500);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <MoodBoard\r\n        images={parseCharacter.images}\r\n        ChangeData={(characterImages) => setCharacterImages(characterImages)}\r\n      />\r\n\r\n      <CharacterDisplay currentCharacter={parseCharacter} editable={\"true\"} />\r\n\r\n      <button id=\"save-changes\" onClick={saveChanges}>\r\n        {saveButtonText}\r\n      </button>\r\n      <button id=\"delete-character\" onClick={props.deleteCharacter}>\r\n        {deleteButtonText}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterFetch;\r\n","import React, { useState } from \"react\";\r\nimport CharacterFetch from \"./CharacterFetch\";\r\nimport $ from \"jquery\";\r\n\r\nconst Characterstorage = () => {\r\n  const [cleared, setCleared] = useState(\"Delete all\");\r\n  const [array, setArray] = useState(Object.keys(localStorage));\r\n  const [currentChar, setCurrentChar] = useState(\"\");\r\n  const [isFetched, setIsFetched] = useState(false);\r\n\r\n  function clearLocalStorage() {\r\n    let books = localStorage.getItem(\"books\");\r\n    localStorage.clear();\r\n    localStorage.setItem(\"books\", books);\r\n    setArray([]);\r\n    setCleared(\"Deleted\");\r\n\r\n    setTimeout(() => {\r\n      setCleared(\"Delete all\");\r\n      setArray(Object.keys(localStorage));\r\n    }, 1000);\r\n  }\r\n\r\n  function fetchCharacter(event) {\r\n    setIsFetched(false);\r\n    setTimeout(() => {\r\n      setIsFetched(true);\r\n    }, 1);\r\n    setCurrentChar(event.target.id);\r\n    $(\"#clear-storage\").hide();\r\n\r\n    $(\".stored-chars\").css({ background: \"white\", color: \"black\" });\r\n    $(event.target).css({ background: \"black\", color: \"white\" });\r\n  }\r\n\r\n  function deleteCharacter() {\r\n    setIsFetched(false);\r\n    localStorage.removeItem(currentChar);\r\n    setArray(Object.keys(localStorage));\r\n  }\r\n\r\n  return (\r\n    <div id=\"stored-characters\">\r\n      <div id=\"stored-characters-list\">\r\n        {array.map((storedchar) => (\r\n          <button\r\n            id={storedchar}\r\n            key={storedchar}\r\n            onClick={fetchCharacter}\r\n            className=\"stored-chars\"\r\n          >\r\n            {storedchar.replace(/-/g, \" \")}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <button id=\"clear-storage\" onClick={clearLocalStorage}>\r\n        {cleared}\r\n      </button>\r\n      <div id=\"storage-display\">\r\n        {isFetched ? (\r\n          <CharacterFetch\r\n            deleteCharacter={deleteCharacter}\r\n            charID={currentChar}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Characterstorage;\r\n","import React, { useState } from \"react\";\r\nimport CharacterCreation from \"./CharacterCreation\";\r\nimport CharacterStorage from \"./CharacterStorage\";\r\nimport $ from \"jquery\";\r\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\r\n\r\nconst CharacterOptions = () => {\r\n  let navigate = useNavigate();\r\n\r\n  function modulChoice(event) {\r\n    $(\"#char-choice-buttons\").css({ top: \"110%\" });\r\n    $(\".option\").css({\r\n      \"font-size\": \"0.8em\",\r\n      height: \"25px\",\r\n      padding: \"5px\",\r\n      background: \"black\",\r\n      color: \"white\",\r\n    });\r\n    $(event.target).css({\r\n      background: \"white\",\r\n      color: \"black\",\r\n      border: \"1px solid black\",\r\n    });\r\n\r\n    navigate(event.target.id);\r\n  }\r\n\r\n  return (\r\n    <div id=\"character-options\" className=\"options\">\r\n      <div id=\"display-module\">\r\n        <Routes>\r\n          <Route path=\"/create-character\" element={<CharacterCreation />} />\r\n          <Route path=\"/view-characters\" element={<CharacterStorage />} />\r\n        </Routes>\r\n      </div>\r\n      <div id=\"char-choice-buttons\">\r\n        <button className=\"option\" onClick={modulChoice} id=\"create-character\">\r\n          Create Character\r\n        </button>\r\n        <button className=\"option\" onClick={modulChoice} id=\"view-characters\">\r\n          View Characters\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterOptions;\r\n","import React, { useState } from \"react\";\r\nimport CharacterOptions from \"./components/character/CharacterOptions\";\r\n\r\nconst Characters = () => {\r\n  return (\r\n    <div id=\"character-module\" className=\"module\">\r\n      <CharacterOptions />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Characters;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport $ from \"jquery\";\r\n\r\nconst Plotsidebar = ({\r\n  currentlyOpenedBook,\r\n  currentlyOpenedChapter,\r\n  summary,\r\n  setSummary,\r\n}) => {\r\n  const [storedBooks, setStoredBooks] = useState(\"\");\r\n  const [summaryInput, setSummaryInput] = useState(\"\");\r\n  const [buttonText, setButtonText] = useState(\"Save\");\r\n\r\n  if (currentlyOpenedBook.length) {\r\n    $(\"#right-sidebar-input\").show();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\"books\" in localStorage) {\r\n      setStoredBooks(JSON.parse(localStorage.books));\r\n    }\r\n  }, []);\r\n\r\n  function saveSummary(event) {\r\n    event.preventDefault();\r\n\r\n    if (currentlyOpenedBook.length && !currentlyOpenedChapter.length) {\r\n      let newBookData = {\r\n        ...storedBooks,\r\n        [currentlyOpenedBook[1]]: {\r\n          ...storedBooks[currentlyOpenedBook[1]],\r\n          [currentlyOpenedBook[1] + \"Summary\"]: summaryInput,\r\n        },\r\n      };\r\n\r\n      localStorage.setItem(\"books\", JSON.stringify(newBookData));\r\n      setStoredBooks(JSON.parse(localStorage.books));\r\n    } else if (currentlyOpenedBook.length && currentlyOpenedChapter.length) {\r\n      let newBookData = {\r\n        ...storedBooks,\r\n        [currentlyOpenedBook[1]]: {\r\n          ...storedBooks[currentlyOpenedBook[1]],\r\n          chaptersContent: {\r\n            ...storedBooks[currentlyOpenedBook[1]].chaptersContent,\r\n            [currentlyOpenedChapter[1] + \"Summary\"]: summaryInput,\r\n          },\r\n        },\r\n      };\r\n\r\n      localStorage.setItem(\"books\", JSON.stringify(newBookData));\r\n      setStoredBooks(JSON.parse(localStorage.books));\r\n    }\r\n\r\n    setButtonText(\"Saved\");\r\n    setTimeout(() => {\r\n      setButtonText(\"Save\");\r\n    }, 1500);\r\n  }\r\n\r\n  return (\r\n    <section className=\"right-side\">\r\n      <div id=\"currently-viewing\">\r\n        <h1>{currentlyOpenedBook[0]}</h1>\r\n        <h2>{currentlyOpenedChapter[0]}</h2>\r\n      </div>\r\n      <form id=\"right-sidebar-input\">\r\n        <label>\r\n          <p style={{ fontFamily: \"Montserrat\", margin: 0 }}>\r\n            one-sentence summary\r\n          </p>\r\n          <textarea\r\n            id=\"one-sentence-summary\"\r\n            placeholder=\"Who does what to whom, when, where, how, and why?\"\r\n            value={summary}\r\n            onChange={(event) => {\r\n              setSummaryInput(event.target.value);\r\n              setSummary(event.target.value);\r\n            }}\r\n          />\r\n        </label>\r\n        <button id=\"save-summary\" onClick={saveSummary}>\r\n          {buttonText}\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Plotsidebar;\r\n","import React, { useState } from \"react\";\r\nimport $ from \"jquery\";\r\nimport Plotsidebar from \"./Plotsidebar\";\r\n\r\nconst CreateBook = ({ bookCount, savedBookNames }) => {\r\n  const chartData = [\r\n    [\"Time\", \"Stakes\", { role: \"tooltip\", type: \"string\", p: { html: true } }],\r\n    [0, 0, \"Startpoint\"],\r\n    [100, 0, \"Endpoint\"],\r\n  ];\r\n  const [bookCounter, setBookCounter] = useState(bookCount);\r\n  const [newBooks, setNewBooks] = useState({});\r\n  const imgArray = [\"https://i.imgur.com/w1AGMhl.png\"];\r\n\r\n  function addBook(event) {\r\n    event.preventDefault();\r\n    setBookCounter(bookCounter + 1);\r\n  }\r\n\r\n  function deductBook(event) {\r\n    event.preventDefault();\r\n    if (bookCounter > 0) {\r\n      setBookCounter(bookCounter - 1);\r\n    }\r\n  }\r\n\r\n  function saveBookName(event) {\r\n    event.preventDefault();\r\n    let bookid = event.target.id;\r\n    let inputField = document.getElementById(bookid + \"input\").value;\r\n\r\n    setNewBooks({\r\n      ...newBooks,\r\n      [bookid]: {\r\n        name: inputField,\r\n        chapters: 1,\r\n        chartData: chartData,\r\n        imgArray: imgArray,\r\n        chaptersContent: {},\r\n      },\r\n    });\r\n  }\r\n\r\n  function confirmBooks(event) {\r\n    event.preventDefault();\r\n    localStorage.setItem(\"books\", JSON.stringify(newBooks));\r\n    $(event.target).text(\"Saved\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p>\r\n        Set the number of books you plan to outline.<br></br>\r\n        <b>WARNING: </b> This will override <b>ALL </b> your currently saved\r\n        books, including charts and moodboards.\r\n      </p>\r\n      <div id=\"book-creator\">\r\n        <div id=\"book-counter\">\r\n          <button className=\"set-book-count\" onClick={deductBook}>\r\n            -\r\n          </button>\r\n          <h1>{bookCounter}</h1>\r\n          <button className=\"set-book-count\" onClick={addBook}>\r\n            +\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div id=\"book-namer\">\r\n        {[...Array(bookCounter)].map((e, i) => (\r\n          <form key={i}>\r\n            <label>\r\n              <div className=\"bookname-label\">Book {i + 1}: </div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                className=\"book-name-input\"\r\n                id={\"book\" + (i + 1) + \"input\"}\r\n                placeholder={savedBookNames[i]}\r\n              />\r\n            </label>\r\n            <input\r\n              type=\"button\"\r\n              value=\"Save\"\r\n              className=\"book-name-input-button\"\r\n              id={\"book\" + (i + 1)}\r\n              onClick={saveBookName}\r\n            />\r\n          </form>\r\n        ))}\r\n      </div>\r\n      <button id=\"confirmbooks\" onClick={confirmBooks}>\r\n        Confirm & Submit\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateBook;\r\n","import React, { useState } from \"react\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport $ from \"jquery\";\r\n\r\nconst PlotChart = ({ setFetchBook, chartData, setChartData, saveChart }) => {\r\n  const [stakes, setStakes] = useState(0);\r\n  const [percentage, setPercentage] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  function addStakes(event) {\r\n    event.preventDefault();\r\n    for (let i = 1; i < chartData.length; i++) {\r\n      if (chartData[i][0] > percentage) {\r\n        const newData = [\r\n          // Items before the insertion point:\r\n          ...chartData.slice(0, i),\r\n          // New item:\r\n          [Number(percentage), Number(stakes), comment],\r\n          // Items after the insertion point:\r\n          ...chartData.slice(i),\r\n        ];\r\n        setChartData(newData);\r\n        setFetchBook(newData);\r\n        setStakes(0);\r\n        setPercentage(0);\r\n        $(\"input\").val(\"\");\r\n        i = chartData.length;\r\n      }\r\n    }\r\n  }\r\n\r\n  function clearStakes(event) {\r\n    event.preventDefault();\r\n\r\n    setChartData([\r\n      [\r\n        \"Time\",\r\n        \"Stakes\",\r\n        { role: \"tooltip\", type: \"string\", p: { html: true } },\r\n      ],\r\n      [0, 0, \"Startpoint\"],\r\n      [100, 0, \"Endpoint\"],\r\n    ]);\r\n    setStakes(0);\r\n    setPercentage(0);\r\n    $(\"input\").val(\"\");\r\n  }\r\n\r\n  const options = {\r\n    title: \"Story Arc\",\r\n    titleTextStyle: {\r\n      bold: false,\r\n      italic: true,\r\n    },\r\n    curveType: \"function\",\r\n    legend: { position: \"bottom\" },\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    colors: [\"#000\", \"#000\"],\r\n    vAxis: {\r\n      baseline: 100,\r\n      title: \"Stakes & Tension\",\r\n    },\r\n    fontName: \"Cormorant Garamond\",\r\n    fontSize: 25,\r\n    tooltip: {\r\n      trigger: \"hover\",\r\n      textStyle: {\r\n        fontName: \"Montserrat\",\r\n        fontSize: 15,\r\n      },\r\n    },\r\n    selectionMode: \"multiple\",\r\n    aggregationTarget: \"series\",\r\n    animation: {\r\n      duration: 1000,\r\n      easing: \"inAndOut\",\r\n    },\r\n    enableInteractivity: true,\r\n    hAxis: {\r\n      gridlines: {\r\n        color: \"#fff\",\r\n      },\r\n    },\r\n    pointShape: \"polygon\",\r\n    pointSize: 10,\r\n    pointsVisible: true,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"chart-container\">\r\n        <Chart\r\n          chartType=\"LineChart\"\r\n          data={chartData}\r\n          options={options}\r\n          id=\"chart\"\r\n        />\r\n        <form id=\"chart-input\">\r\n          <label>\r\n            Add\r\n            <input\r\n              type=\"text\"\r\n              onChange={(event) => setStakes(event.target.value)}\r\n            />\r\n            Relative Stakes Value at the\r\n            <input\r\n              type=\"text\"\r\n              onChange={(event) => setPercentage(event.target.value)}\r\n            />\r\n            % mark of the plot with the following comment:{\" \"}\r\n            <input\r\n              type=\"text\"\r\n              onChange={(event) => setComment(event.target.value)}\r\n              id=\"comment-input\"\r\n            />\r\n          </label>\r\n          <button onClick={addStakes}>Add</button>\r\n          <button onClick={clearStakes}>Clear</button>\r\n        </form>\r\n        <button id=\"savechart\" onClick={saveChart}>\r\n          Save\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlotChart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport $ from \"jquery\";\r\nimport PlotChart from \"./PlotChart\";\r\nimport MoodBoard from \"../../MoodBoard\";\r\n\r\nconst ChaptersView = ({\r\n  setCurrentlyOpenedBook,\r\n  setCurrentlyOpenedChapter,\r\n  setSummary,\r\n}) => {\r\n  const [storedBooks, setStoredBooks] = useState(\"\");\r\n  const [chapterCount, setChapterCount] = useState(0);\r\n  const [currentBook, setCurrentBook] = useState(\"\");\r\n  const [currentChapter, setCurrentChapter] = useState(\"\");\r\n  const [chartDefaultData, setChartDefaultData] = useState([\r\n    [\"Time\", \"Stakes\", { role: \"tooltip\", type: \"string\", p: { html: true } }],\r\n    [0, 0, \"Startpoint\"],\r\n    [100, 0, \"Endpoint\"],\r\n  ]);\r\n  const [chartSavedData, setChartSavedData] = useState(chartDefaultData);\r\n  const [chartNewData, setChartNewData] = useState([]);\r\n  const [chapterImages, setChapterImages] = useState([]);\r\n  const [showMoodboard, setShowMoodboard] = useState();\r\n\r\n  function saveChart() {\r\n    let newBookData = {\r\n      ...storedBooks,\r\n      [currentBook]: {\r\n        ...storedBooks[currentBook],\r\n        chaptersContent: {\r\n          ...storedBooks[currentBook].chaptersContent,\r\n          [currentChapter]: chartSavedData,\r\n          [currentChapter + \"Images\"]: chapterImages,\r\n        },\r\n      },\r\n    };\r\n\r\n    localStorage.setItem(\"books\", JSON.stringify(newBookData));\r\n    setStoredBooks(JSON.parse(localStorage.books));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\"books\" in localStorage) {\r\n      setStoredBooks(JSON.parse(localStorage.books));\r\n    }\r\n  }, []);\r\n\r\n  function fetchChapterList(event) {\r\n    event.preventDefault();\r\n    setStoredBooks(JSON.parse(localStorage.books));\r\n    setShowMoodboard();\r\n    setChapterCount(0);\r\n    setCurrentBook(event.target.id);\r\n    setCurrentlyOpenedBook([$(event.target).text(), event.target.id]);\r\n    setCurrentlyOpenedChapter(\"\");\r\n\r\n    setTimeout(() => {\r\n      setChapterCount(Number(storedBooks[event.target.id].chapters));\r\n    }, 1);\r\n\r\n    $(\".right-side\").show();\r\n    $(\"#fetched-chapter-container\").hide();\r\n    $(\"#remove-chapter-btn, #add-chapter-btn\").show();\r\n\r\n    $(\".book-display-in-view, .book-display-sidebar\").css({\r\n      background: \"black\",\r\n      color: \"white\",\r\n    });\r\n    $(\"#\" + event.target.id).css({\r\n      background: \"white\",\r\n      color: \"black\",\r\n    });\r\n    $(event.target).css({\r\n      background: \"white\",\r\n      color: \"black\",\r\n    });\r\n\r\n    $(\".chapterButtons\").css({\r\n      width: \"60%\",\r\n      \"margin-bottom\": \"5px\",\r\n      \"margin-left\": \"20%\",\r\n      \"margin-right\": \"19%\",\r\n      padding: \"5px\",\r\n      \"font-size\": \"1.25em\",\r\n      background: \"black\",\r\n      color: \"white\",\r\n    });\r\n    $(\".viewstate\").css({ top: \"30%\" });\r\n\r\n    $(\"#chapter-list-container\").css({\r\n      height: \"50vh\",\r\n      display: \"block\",\r\n      top: \"65%\",\r\n    });\r\n\r\n    setSummary(\"\");\r\n    if (storedBooks[event.target.id][event.target.id + \"Summary\"]) {\r\n      setSummary(storedBooks[event.target.id][event.target.id + \"Summary\"]);\r\n    }\r\n  }\r\n\r\n  function fetchChapter(event) {\r\n    event.preventDefault();\r\n    setStoredBooks(JSON.parse(localStorage.books));\r\n\r\n    setCurrentChapter(event.target.id);\r\n    setCurrentlyOpenedChapter([$(event.target).text(), event.target.id]);\r\n\r\n    $(\"#remove-chapter-btn, #add-chapter-btn\").hide();\r\n\r\n    $(\".chapterButtons\").css({\r\n      \"margin-bottom\": \"5px\",\r\n      \"margin-left\": \"5px\",\r\n      \"margin-right\": \"0px\",\r\n      padding: \"5px\",\r\n      \"font-size\": \"0.75em\",\r\n      background: \"black\",\r\n      color: \"white\",\r\n      \"flex-basis\": \"100px\",\r\n      \"flex-grow\": \"0\",\r\n      \"flex-shrink\": \"0\",\r\n    });\r\n    $(event.target).css({ background: \"white\", color: \"black\" });\r\n    $(\".viewstate\").css({ top: \"25%\" });\r\n    $(\"#chapter-list-container\").css({\r\n      height: \"auto\",\r\n      display: \"flex\",\r\n      top: \"32.5%\",\r\n    });\r\n\r\n    $(\"#fetched-chapter-container\").show();\r\n\r\n    if (\r\n      storedBooks[currentBook].chaptersContent[event.target.id] &&\r\n      storedBooks[currentBook].chaptersContent[event.target.id].length !== 0\r\n    ) {\r\n      setChartSavedData(\r\n        storedBooks[currentBook].chaptersContent[event.target.id]\r\n      );\r\n    } else {\r\n      setChartSavedData(chartDefaultData);\r\n    }\r\n\r\n    if (storedBooks[currentBook].chaptersContent[event.target.id + \"Images\"]) {\r\n      setChapterImages();\r\n      setShowMoodboard();\r\n      setTimeout(() => {\r\n        setShowMoodboard(\r\n          <MoodBoard\r\n            images={\r\n              storedBooks[currentBook].chaptersContent[\r\n                event.target.id + \"Images\"\r\n              ]\r\n            }\r\n            ChangeData={(chapterImages) => setChapterImages(chapterImages)}\r\n          />\r\n        );\r\n\r\n        setChapterImages(\r\n          storedBooks[currentBook].chaptersContent[event.target.id + \"Images\"]\r\n        );\r\n      }, 1);\r\n    } else {\r\n      setChapterImages([]);\r\n      setShowMoodboard();\r\n\r\n      setTimeout(() => {\r\n        setShowMoodboard(\r\n          <MoodBoard\r\n            images={[\"https://i.imgur.com/w1AGMhl.png\"]}\r\n            ChangeData={(chapterImages) => setChapterImages(chapterImages)}\r\n          />\r\n        );\r\n      }, 1);\r\n    }\r\n    setSummary(\"\");\r\n    if (storedBooks[currentBook].chaptersContent[event.target.id + \"Summary\"]) {\r\n      setSummary(\r\n        storedBooks[currentBook].chaptersContent[event.target.id + \"Summary\"]\r\n      );\r\n    }\r\n  }\r\n\r\n  function addChapter() {\r\n    let newBookData = {\r\n      ...storedBooks,\r\n      [currentBook]: {\r\n        ...storedBooks[currentBook],\r\n        chapters: Number(storedBooks[currentBook].chapters) + 1,\r\n      },\r\n    };\r\n\r\n    localStorage.setItem(\"books\", JSON.stringify(newBookData));\r\n    setStoredBooks(JSON.parse(localStorage.books));\r\n\r\n    setChapterCount(chapterCount + 1);\r\n  }\r\n\r\n  function removeChapter() {\r\n    if (Number(storedBooks[currentBook].chapters) > 1) {\r\n      let newBookData = {\r\n        ...storedBooks,\r\n        [currentBook]: {\r\n          ...storedBooks[currentBook],\r\n          chapters: Number(storedBooks[currentBook].chapters) - 1,\r\n        },\r\n      };\r\n\r\n      localStorage.setItem(\"books\", JSON.stringify(newBookData));\r\n      setStoredBooks(JSON.parse(localStorage.books));\r\n\r\n      setChapterCount(chapterCount - 1);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {showMoodboard}\r\n      <div id=\"chapters-view\" className=\"viewstate\">\r\n        {Object.keys(storedBooks)\r\n          .sort()\r\n          .map(function (key, index) {\r\n            return (\r\n              <button\r\n                key={index}\r\n                className=\"book-display-in-view\"\r\n                id={key}\r\n                onClick={fetchChapterList}\r\n              >\r\n                {storedBooks[key].name}\r\n              </button>\r\n            );\r\n          })}\r\n      </div>\r\n      <div id=\"chapter-list-container\">\r\n        {[...Array(chapterCount)].map((e, i) => (\r\n          <button\r\n            className=\"chapterButtons\"\r\n            key={i}\r\n            id={currentBook + \"chapter\" + (i + 1)}\r\n            onClick={fetchChapter}\r\n          >\r\n            Chapter {i + 1}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <div id=\"fetched-chapter-container\">\r\n        <PlotChart\r\n          saveChart={saveChart}\r\n          chartData={chartSavedData}\r\n          setChartData={setChartSavedData}\r\n          setFetchBook={setChartNewData}\r\n        />\r\n      </div>\r\n      <button onClick={removeChapter} id=\"remove-chapter-btn\">\r\n        Remove Chapter\r\n      </button>\r\n      <button onClick={addChapter} id=\"add-chapter-btn\">\r\n        Add Chapter\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChaptersView;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PlotChart from \"./PlotChart\";\r\nimport $ from \"jquery\";\r\nimport MoodBoard from \"../../MoodBoard\";\r\n\r\nconst BooksView = ({\r\n  setCurrentlyOpenedBook,\r\n  setCurrentlyOpenedChapter,\r\n  setSummary,\r\n}) => {\r\n  const [storedBooks, setStoredBooks] = useState(\"\");\r\n  const [fetchBook, setFetchBook] = useState([\r\n    [\"Time\", \"Stakes\", { role: \"tooltip\", type: \"string\", p: { html: true } }],\r\n    [0, 0, \"Startpoint\"],\r\n    [100, 0, \"Endpoint\"],\r\n  ]);\r\n  const [clickTarget, setClickTarget] = useState(\"\");\r\n  const [chartData, setChartData] = useState(fetchBook);\r\n  const [characterImages, setCharacterImages] = useState([\r\n    \"https://i.imgur.com/w1AGMhl.png\",\r\n  ]);\r\n  const [showMoodboard, setShowMoodboard] = useState();\r\n\r\n  const [chartContainerStyle, setChartContainerStyle] = useState({\r\n    display: \"none\",\r\n  });\r\n\r\n  useEffect(function importbook() {\r\n    if (\"books\" in localStorage) {\r\n      setStoredBooks(JSON.parse(localStorage.books));\r\n    }\r\n  }, []);\r\n\r\n  function fetchChart(event) {\r\n    event.preventDefault();\r\n    setStoredBooks(JSON.parse(localStorage.books));\r\n\r\n    setChartContainerStyle({ display: \"block\" });\r\n    $(\".right-side\").show();\r\n\r\n    setClickTarget(event.target.id);\r\n    setCurrentlyOpenedBook([$(event.target).text(), event.target.id]);\r\n    setCurrentlyOpenedChapter(\"\");\r\n\r\n    setFetchBook(storedBooks[event.target.id].chartData);\r\n    setChartData(storedBooks[event.target.id].chartData);\r\n    setShowMoodboard();\r\n    setTimeout(() => {\r\n      setShowMoodboard(\r\n        <MoodBoard\r\n          images={storedBooks[event.target.id].imgArray}\r\n          ChangeData={(characterImages) => setCharacterImages(characterImages)}\r\n        />\r\n      );\r\n    }, 1);\r\n    setCharacterImages(storedBooks[event.target.id].imgArray);\r\n\r\n    $(\".book-display-in-view, .book-display-sidebar\").css({\r\n      background: \"black\",\r\n      color: \"white\",\r\n    });\r\n    $(\"#\" + event.target.id).css({\r\n      background: \"white\",\r\n      color: \"black\",\r\n    });\r\n    $(event.target).css({\r\n      background: \"white\",\r\n      color: \"black\",\r\n    });\r\n\r\n    setSummary(\"\");\r\n    if (storedBooks[event.target.id][event.target.id + \"Summary\"]) {\r\n      setSummary(storedBooks[event.target.id][event.target.id + \"Summary\"]);\r\n    }\r\n  }\r\n\r\n  function saveChart(event) {\r\n    event.preventDefault();\r\n    let newStoredData = {\r\n      ...storedBooks,\r\n      [clickTarget]: {\r\n        ...storedBooks[clickTarget],\r\n        chartData: chartData,\r\n        imgArray: characterImages,\r\n      },\r\n    };\r\n    localStorage.setItem(\"books\", JSON.stringify(newStoredData));\r\n    setStoredBooks(JSON.parse(localStorage.books));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {showMoodboard}\r\n      <div id=\"books-view\" className=\"viewstate\">\r\n        {Object.keys(storedBooks)\r\n          .sort()\r\n          .map(function (key, index) {\r\n            return (\r\n              <button\r\n                key={index}\r\n                className=\"book-display-in-view\"\r\n                id={key}\r\n                onClick={fetchChart}\r\n              >\r\n                {storedBooks[key].name}\r\n              </button>\r\n            );\r\n          })}\r\n      </div>\r\n      <div id=\"fetched-book-container\" style={chartContainerStyle}>\r\n        <PlotChart\r\n          saveChart={saveChart}\r\n          chartData={chartData}\r\n          setChartData={setChartData}\r\n          setFetchBook={setFetchBook}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BooksView;\r\n","import React, { useState } from \"react\";\r\nimport Plotsidebar from \"./Plotsidebar\";\r\nimport ChaptersView from \"./PlotChaptersView\";\r\nimport BooksView from \"./PlotBooksView\";\r\nimport $ from \"jquery\";\r\n\r\nconst StoryArcs = () => {\r\n  const [displayView, setDisplayView] = useState(\"\");\r\n  const [currentlyOpenedBook, setCurrentlyOpenedBook] = useState(\"\");\r\n  const [currentlyOpenedChapter, setCurrentlyOpenedChapter] = useState(\"\");\r\n  const [summary, setSummary] = useState();\r\n\r\n  return (\r\n    <div>\r\n      <Plotsidebar\r\n        currentlyOpenedBook={currentlyOpenedBook}\r\n        currentlyOpenedChapter={currentlyOpenedChapter}\r\n        summary={summary}\r\n        setSummary={setSummary}\r\n      />\r\n      {displayView}\r\n      <div id=\"arcs-nav\">\r\n        <button\r\n          className=\"arcs-btn\"\r\n          onClick={(e) => {\r\n            setDisplayView(\"\");\r\n            setCurrentlyOpenedBook(\"\");\r\n            setCurrentlyOpenedChapter(\"\");\r\n            setTimeout(() => {\r\n              setDisplayView(\r\n                <BooksView\r\n                  setCurrentlyOpenedBook={setCurrentlyOpenedBook}\r\n                  setCurrentlyOpenedChapter={setCurrentlyOpenedChapter}\r\n                  setSummary={setSummary}\r\n                />\r\n              );\r\n            }, 1);\r\n            $(\".right-side\").hide();\r\n            $(\".arcs-btn\").css({ background: \"white\", color: \"black\" });\r\n            $(e.target).css({ background: \"black\", color: \"white\" });\r\n            $(\".book-display-sidebar\").css({\r\n              background: \"black\",\r\n              color: \"white\",\r\n            });\r\n            setSummary(\"\");\r\n          }}\r\n        >\r\n          Book View\r\n        </button>\r\n        <button\r\n          className=\"arcs-btn\"\r\n          onClick={(e) => {\r\n            setDisplayView(\"\");\r\n            setCurrentlyOpenedBook(\"\");\r\n            setCurrentlyOpenedChapter(\"\");\r\n            setTimeout(() => {\r\n              setDisplayView(\r\n                <ChaptersView\r\n                  setCurrentlyOpenedBook={setCurrentlyOpenedBook}\r\n                  setCurrentlyOpenedChapter={setCurrentlyOpenedChapter}\r\n                  setSummary={setSummary}\r\n                />\r\n              );\r\n            }, 1);\r\n            $(\".right-side\").hide();\r\n            $(\".arcs-btn\").css({ background: \"white\", color: \"black\" });\r\n            $(e.target).css({ background: \"black\", color: \"white\" });\r\n            $(\".book-display-sidebar\").css({\r\n              background: \"black\",\r\n              color: \"white\",\r\n            });\r\n            setSummary(\"\");\r\n          }}\r\n        >\r\n          Chapter View\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StoryArcs;\r\n\r\n//       <PlotChart />\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CreateBook from \"./components/plot/PlotCreateBook\";\r\nimport StoryArcs from \"./components/plot/PlotArcs\";\r\nimport $ from \"jquery\";\r\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\r\n\r\nconst Plot = () => {\r\n  const [bookCount, setBookCount] = useState(0);\r\n  const [savedBookNames, setSavedBookNames] = useState([]);\r\n  const [savedChapterCount, setSavedChapterCount] = useState([]);\r\n\r\n  let navigate = useNavigate();\r\n\r\n  function setButtonStyle(e) {\r\n    $(\"#plot-nav\").css({ top: \"110%\" });\r\n    $(\"#plot-nav button\").css({ \"font-size\": \"0.8em\", height: \"25px\" });\r\n    $(\".plot-options\").removeClass(\"white-active-btn\");\r\n    $(e.target).addClass(\"white-active-btn\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\"books\" in localStorage) {\r\n      setBookCount(Object.keys(JSON.parse(localStorage.books)).length);\r\n      let obj = Object.keys(JSON.parse(localStorage.books));\r\n      let titlesArray = [];\r\n      let chaptersArray = [];\r\n      obj.map((book, index) => {\r\n        titlesArray.push(JSON.parse(localStorage.books)[book].name);\r\n        chaptersArray.push(JSON.parse(localStorage.books)[book].chapters);\r\n        setSavedBookNames(titlesArray.sort());\r\n        setSavedChapterCount(chaptersArray);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"character-module\" class=\"module\">\r\n      <div>\r\n        <Routes>\r\n          <Route\r\n            path=\"/set-books\"\r\n            element={\r\n              <CreateBook\r\n                bookCount={bookCount}\r\n                savedBookNames={savedBookNames}\r\n              />\r\n            }\r\n          />\r\n          <Route path=\"/set-story-arcs\" element={<StoryArcs />} />\r\n        </Routes>\r\n      </div>\r\n      <div id=\"plot-nav\">\r\n        <button\r\n          className=\"plot-options\"\r\n          id=\"set-books\"\r\n          onClick={(e) => {\r\n            navigate(e.target.id);\r\n            setButtonStyle(e);\r\n          }}\r\n        >\r\n          Set Books\r\n        </button>\r\n        <button\r\n          className=\"plot-options\"\r\n          id=\"set-story-arcs\"\r\n          onClick={(e) => {\r\n            navigate(e.target.id);\r\n            setButtonStyle(e);\r\n          }}\r\n        >\r\n          Set Story Arcs\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Plot;\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport $ from \"jquery\";\r\n\r\nconst WorldbuildingNav = ({\r\n  setCurrentlyOpenedModule,\r\n  setWorldbuildingObject,\r\n}) => {\r\n  let navigate = useNavigate();\r\n\r\n  function onClick(event) {\r\n    $(\"#worldbuilding-navigation\").css({\r\n      \"grid-auto-flow\": \"column\",\r\n      top: \"111%\",\r\n      width: \"97.5vw\",\r\n      height: \"auto\",\r\n    });\r\n\r\n    $(\".worldbuilding-navbtn\").css({\r\n      \"font-size\": \"0.65rem\",\r\n      width: \"7.5vw\",\r\n      background: \"white\",\r\n      color: \"black\",\r\n    });\r\n\r\n    $(event.target).css({ background: \"black\", color: \"white\" });\r\n\r\n    if (\"worldbuilding\" in localStorage) {\r\n      setWorldbuildingObject(JSON.parse(localStorage.worldbuilding));\r\n    }\r\n\r\n    navigate(\"/worldbuilding/\" + event.target.id);\r\n    setCurrentlyOpenedModule(event.target.id);\r\n  }\r\n\r\n  return (\r\n    <div id=\"worldbuilding-navigation\">\r\n      <button className=\"worldbuilding-navbtn\" onClick={onClick} id=\"art\">\r\n        Art\r\n      </button>\r\n\r\n      <button\r\n        className=\"worldbuilding-navbtn\"\r\n        onClick={onClick}\r\n        id=\"legends-and-religions\"\r\n      >\r\n        Legends and Religions\r\n      </button>\r\n      <button\r\n        className=\"worldbuilding-navbtn\"\r\n        onClick={onClick}\r\n        id=\"locations-and-settings\"\r\n      >\r\n        Locations and Settings\r\n      </button>\r\n      <button className=\"worldbuilding-navbtn\" onClick={onClick} id=\"geography\">\r\n        Geography\r\n      </button>\r\n      <button\r\n        className=\"worldbuilding-navbtn\"\r\n        onClick={onClick}\r\n        id=\"flora-and-fauna\"\r\n      >\r\n        Flora and Fauna\r\n      </button>\r\n      <button\r\n        className=\"worldbuilding-navbtn\"\r\n        onClick={onClick}\r\n        id=\"races-nations-cultures\"\r\n      >\r\n        Races, Nations, Cultures\r\n      </button>\r\n      <button className=\"worldbuilding-navbtn\" onClick={onClick} id=\"history\">\r\n        History\r\n      </button>\r\n      <button\r\n        className=\"worldbuilding-navbtn\"\r\n        onClick={onClick}\r\n        id=\"politics-and-economics\"\r\n      >\r\n        Politics and Economics\r\n      </button>\r\n      <button\r\n        className=\"worldbuilding-navbtn\"\r\n        onClick={onClick}\r\n        id=\"items-and-technology\"\r\n      >\r\n        Items and Technology\r\n      </button>\r\n      <button\r\n        className=\"worldbuilding-navbtn\"\r\n        onClick={onClick}\r\n        id=\"skills-and-spells\"\r\n      >\r\n        Skills and Spells\r\n      </button>\r\n      <button\r\n        className=\"worldbuilding-navbtn\"\r\n        onClick={onClick}\r\n        id=\"magic-systems\"\r\n      >\r\n        Magic Systems\r\n      </button>\r\n      <button\r\n        className=\"worldbuilding-navbtn\"\r\n        onClick={onClick}\r\n        id=\"professions\"\r\n      >\r\n        Professions\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorldbuildingNav;\r\n","import React from \"react\";\r\nimport $ from \"jquery\";\r\n\r\nconst WorldbuildingSidebar = ({ data, setCurrentlyOpenedItem, addItem }) => {\r\n  return (\r\n    <div className=\"right-side\" id=\"worldbuilding-sidebar\">\r\n      <div className=\"worldbuilding-module-container\">\r\n        {Object.keys(data).map((e, i) => {\r\n          return (\r\n            <div\r\n              key={e}\r\n              id={data[e].itemid}\r\n              className=\"item\"\r\n              onClick={(event) => {\r\n                {\r\n                  console.log(data[e].itemid);\r\n                  setCurrentlyOpenedItem(data[e].itemid);\r\n                  $(\".worldbuilding-grid-item\").removeClass(\"active-tile\");\r\n                  $(\r\n                    \"#\" + data[e].itemid + \" > .worldbuilding-grid-item\"\r\n                  ).addClass(\"active-tile\");\r\n                }\r\n              }}\r\n            >\r\n              <div className=\"worldbuilding-grid-item\">\r\n                <h3>{data[e].name}</h3>\r\n                <img src={data[e].icon} className=\"worldbuilding-item-icon\" />\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <button className=\"button-black\" onClick={addItem}>\r\n        Add Item\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorldbuildingSidebar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport $ from \"jquery\";\r\nimport MoodBoard from \"../../MoodBoard\";\r\nimport moodboardImage from \"../../imgs/moodboard.png\";\r\nimport WorldbuildingSidebar from \"./WorldbuildingSidebar\";\r\n\r\nconst Art = ({ worldbuildingObject, setWorldbuildingObject }) => {\r\n  const [moduleData, setModuleData] = useState(worldbuildingObject.art);\r\n  const [currentlyOpenedItem, setCurrentlyOpenedItem] = useState();\r\n  const [isFetched, setIsFetched] = useState(false);\r\n  const [itemImages, setItemImages] = useState([]);\r\n\r\n  function addItem() {\r\n    let keyname = Math.floor(Math.random() * 9000000);\r\n    let newObject = {\r\n      ...worldbuildingObject,\r\n      art: {\r\n        ...worldbuildingObject.art,\r\n        [keyname]: {\r\n          itemid: keyname,\r\n          name: \"\",\r\n          artis: \"\",\r\n          description: \"\",\r\n          lore: \"\",\r\n          icon: \"https://game-icons.net/icons/ffffff/000000/1x1/delapouite/mona-lisa.svg\",\r\n          images: [moodboardImage],\r\n        },\r\n      },\r\n    };\r\n\r\n    localStorage.setItem(\"worldbuilding\", JSON.stringify(newObject));\r\n    setWorldbuildingObject(JSON.parse(localStorage.worldbuilding));\r\n    setModuleData(JSON.parse(localStorage.worldbuilding).art);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (currentlyOpenedItem) {\r\n      setIsFetched(false);\r\n      setTimeout(() => {\r\n        setItemImages(moduleData[currentlyOpenedItem].images);\r\n        setIsFetched(true);\r\n      }, 1);\r\n    }\r\n  }, [currentlyOpenedItem]);\r\n\r\n  function saveChangedItem() {\r\n    let newObject = {\r\n      ...worldbuildingObject,\r\n      art: {\r\n        ...worldbuildingObject.art,\r\n        [currentlyOpenedItem]: {\r\n          itemid: currentlyOpenedItem,\r\n          name: document.getElementById(\"textarea-name\").value,\r\n          artist: document.getElementById(\"textarea-artist\").value,\r\n          description: document.getElementById(\"textarea-description\").value,\r\n          lore: document.getElementById(\"textarea-lore\").value,\r\n          icon: document.getElementById(\"item-icon\").value,\r\n          images: itemImages,\r\n        },\r\n      },\r\n    };\r\n    localStorage.setItem(\"worldbuilding\", JSON.stringify(newObject));\r\n    setModuleData(JSON.parse(localStorage.worldbuilding).art);\r\n    setWorldbuildingObject(JSON.parse(localStorage.worldbuilding));\r\n  }\r\n\r\n  function deleteItem() {\r\n    setIsFetched(false);\r\n    let storedObject = JSON.parse(localStorage.worldbuilding);\r\n    delete storedObject.art[currentlyOpenedItem];\r\n    localStorage.setItem(\"worldbuilding\", JSON.stringify(storedObject));\r\n    setModuleData(JSON.parse(localStorage.worldbuilding).art);\r\n    setWorldbuildingObject(JSON.parse(localStorage.worldbuilding));\r\n  }\r\n\r\n  $(\".right-side\").show();\r\n\r\n  return (\r\n    <div>\r\n      {isFetched ? (\r\n        <MoodBoard\r\n          images={itemImages}\r\n          ChangeData={(itemImages) => setItemImages(itemImages)}\r\n        />\r\n      ) : null}\r\n      <WorldbuildingSidebar\r\n        data={moduleData}\r\n        setCurrentlyOpenedItem={setCurrentlyOpenedItem}\r\n        addItem={addItem}\r\n      />\r\n      <div className=\"worldbuilding-module\">\r\n        {isFetched ? (\r\n          <div id=\"art-viewer\">\r\n            <textarea\r\n              id=\"textarea-artist\"\r\n              defaultValue={moduleData[currentlyOpenedItem].artist}\r\n              onChange={saveChangedItem}\r\n              placeholder=\"Click here to edit the artist.\"\r\n            ></textarea>\r\n            <textarea\r\n              id=\"textarea-name\"\r\n              defaultValue={moduleData[currentlyOpenedItem].name}\r\n              onChange={saveChangedItem}\r\n              placeholder=\"Click here to edit the name of the artwork.\"\r\n            ></textarea>\r\n\r\n            <h3>Description</h3>\r\n            <textarea\r\n              id=\"textarea-description\"\r\n              defaultValue={moduleData[currentlyOpenedItem].description}\r\n              onChange={saveChangedItem}\r\n              placeholder=\"Click here write. Describe the artwork itself here.\"\r\n            ></textarea>\r\n            <h3>Lore</h3>\r\n            <textarea\r\n              id=\"textarea-lore\"\r\n              defaultValue={moduleData[currentlyOpenedItem].lore}\r\n              onChange={saveChangedItem}\r\n              placeholder=\"Click here write. Describe the history of the artwork here.\"\r\n            ></textarea>\r\n            <form id=\"icon-link\" style={{ marginTop: \"20px\" }}>\r\n              <label>Icon Link:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"item-icon\"\r\n                defaultValue={moduleData[currentlyOpenedItem].icon}\r\n                onChange={saveChangedItem}\r\n              />\r\n              <a href=\"https://game-icons.net/\">(Get neat icons from here.)</a>\r\n            </form>\r\n            <div\r\n              style={{\r\n                position: \"absolute\",\r\n                top: \"98%\",\r\n                left: \"50%\",\r\n                transform: \"translate(-50%, -50%)\",\r\n              }}\r\n            >\r\n              <button\r\n                onClick={saveChangedItem}\r\n                className=\"button-black\"\r\n                style={{\r\n                  display: \"inline-block\",\r\n                  position: \"relative\",\r\n                  width: \"200px\",\r\n                }}\r\n              >\r\n                Save item\r\n              </button>\r\n              <button\r\n                onClick={deleteItem}\r\n                className=\"button-black\"\r\n                style={{\r\n                  marginLeft: \"10px\",\r\n                  display: \"inline-block\",\r\n                  position: \"relative\",\r\n                  width: \"200px\",\r\n                }}\r\n              >\r\n                Delete item\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <p\r\n            style={{\r\n              textAlign: \"center\",\r\n              position: \"absolute\",\r\n              top: \"45%\",\r\n              left: \"50%\",\r\n              transform: \"translate(-50%, -50%)\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            \"Learn about art, Captain. When you understand a species' art, you\r\n            understand that species.\" <br /> <i>Grand Admiral Thrawn</i>\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Art;\r\n","import React, { useState } from \"react\";\r\n\r\nconst LegendsAndReligions = () => {\r\n  return <div>Legends and Religions</div>;\r\n};\r\n\r\nexport default LegendsAndReligions;\r\n","import React, { useState } from \"react\";\r\n\r\nconst LocationsAndSettings = () => {\r\n  return <div>Locations and Settings</div>;\r\n};\r\n\r\nexport default LocationsAndSettings;\r\n","import React, { useState } from \"react\";\r\n\r\nconst Geography = () => {\r\n  return <div>Geography</div>;\r\n};\r\n\r\nexport default Geography;\r\n","import React, { useState } from \"react\";\r\n\r\nconst FloraAndFauna = () => {\r\n  return <div>Flora and Fauna</div>;\r\n};\r\n\r\nexport default FloraAndFauna;\r\n","import React, { useState } from \"react\";\r\n\r\nconst RacesNationsCultures = () => {\r\n  return <div>Races, Nations, Cultures</div>;\r\n};\r\n\r\nexport default RacesNationsCultures;\r\n","import React, { useState } from \"react\";\r\n\r\nconst History = () => {\r\n  return <div>History</div>;\r\n};\r\n\r\nexport default History;\r\n","import React, { useState } from \"react\";\r\n\r\nconst PoliticsAndEconomics = () => {\r\n  return <div>Politics and Economics</div>;\r\n};\r\n\r\nexport default PoliticsAndEconomics;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport $ from \"jquery\";\r\nimport MoodBoard from \"../../MoodBoard\";\r\nimport moodboardImage from \"../../imgs/moodboard.png\";\r\nimport scrollImage from \"../../imgs/tied-scroll.png\";\r\nimport WorldbuildingSidebar from \"./WorldbuildingSidebar\";\r\n\r\nconst ItemsAndTechnology = ({\r\n  worldbuildingObject,\r\n  setWorldbuildingObject,\r\n}) => {\r\n  const [itemsAndTechnology, setItemsAndTechnology] = useState(\r\n    worldbuildingObject.itemsAndTechnology\r\n  );\r\n  const [currentlyOpenedItem, setCurrentlyOpenedItem] = useState();\r\n  const [isFetched, setIsFetched] = useState(false);\r\n  const [itemImages, setItemImages] = useState([]);\r\n\r\n  function addItem() {\r\n    let keyname = Math.floor(Math.random() * 9000000);\r\n    let newObject = {\r\n      ...worldbuildingObject,\r\n      itemsAndTechnology: {\r\n        ...worldbuildingObject.itemsAndTechnology,\r\n        [keyname]: {\r\n          itemid: keyname,\r\n          name: \"\",\r\n          description: \"\",\r\n          lore: \"\",\r\n          icon: scrollImage,\r\n          images: [moodboardImage],\r\n        },\r\n      },\r\n    };\r\n\r\n    localStorage.setItem(\"worldbuilding\", JSON.stringify(newObject));\r\n    setWorldbuildingObject(JSON.parse(localStorage.worldbuilding));\r\n    setItemsAndTechnology(\r\n      JSON.parse(localStorage.worldbuilding).itemsAndTechnology\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (currentlyOpenedItem) {\r\n      setIsFetched(false);\r\n      setTimeout(() => {\r\n        setItemImages(itemsAndTechnology[currentlyOpenedItem].images);\r\n        setIsFetched(true);\r\n      }, 1);\r\n    }\r\n  }, [currentlyOpenedItem]);\r\n\r\n  function saveChangedItem() {\r\n    let newObject = {\r\n      ...worldbuildingObject,\r\n      itemsAndTechnology: {\r\n        ...worldbuildingObject.itemsAndTechnology,\r\n        [currentlyOpenedItem]: {\r\n          itemid: currentlyOpenedItem,\r\n          name: document.getElementById(\"textarea-name\").value,\r\n          description: document.getElementById(\"textarea-description\").value,\r\n          lore: document.getElementById(\"textarea-lore\").value,\r\n          icon: document.getElementById(\"item-icon\").value,\r\n          images: itemImages,\r\n        },\r\n      },\r\n    };\r\n    localStorage.setItem(\"worldbuilding\", JSON.stringify(newObject));\r\n    setItemsAndTechnology(\r\n      JSON.parse(localStorage.worldbuilding).itemsAndTechnology\r\n    );\r\n    setWorldbuildingObject(JSON.parse(localStorage.worldbuilding));\r\n  }\r\n\r\n  function deleteItem() {\r\n    setIsFetched(false);\r\n    let storedObject = JSON.parse(localStorage.worldbuilding);\r\n    delete storedObject.itemsAndTechnology[currentlyOpenedItem];\r\n    localStorage.setItem(\"worldbuilding\", JSON.stringify(storedObject));\r\n    setItemsAndTechnology(\r\n      JSON.parse(localStorage.worldbuilding).itemsAndTechnology\r\n    );\r\n    setWorldbuildingObject(JSON.parse(localStorage.worldbuilding));\r\n  }\r\n\r\n  $(\".right-side\").show();\r\n\r\n  return (\r\n    <div>\r\n      {isFetched ? (\r\n        <MoodBoard\r\n          images={itemImages}\r\n          ChangeData={(itemImages) => setItemImages(itemImages)}\r\n        />\r\n      ) : null}\r\n      <WorldbuildingSidebar\r\n        data={itemsAndTechnology}\r\n        setCurrentlyOpenedItem={setCurrentlyOpenedItem}\r\n        addItem={addItem}\r\n      />\r\n      <div className=\"worldbuilding-module\">\r\n        {isFetched ? (\r\n          <div id=\"items-and-technology-viewer\">\r\n            <textarea\r\n              id=\"textarea-name\"\r\n              defaultValue={itemsAndTechnology[currentlyOpenedItem].name}\r\n              onChange={saveChangedItem}\r\n              placeholder=\"Click here to edit the name\"\r\n            ></textarea>\r\n            <h3>Description</h3>\r\n            <textarea\r\n              id=\"textarea-description\"\r\n              defaultValue={itemsAndTechnology[currentlyOpenedItem].description}\r\n              onChange={saveChangedItem}\r\n              placeholder=\"Click here write. Describe the appearance and the utility of the item or technology here.\"\r\n            ></textarea>\r\n            <h3>Lore</h3>\r\n            <textarea\r\n              id=\"textarea-lore\"\r\n              defaultValue={itemsAndTechnology[currentlyOpenedItem].lore}\r\n              onChange={saveChangedItem}\r\n              placeholder=\"Click here write. Describe the history and the way the item relates to your world here.\"\r\n            ></textarea>\r\n            <form id=\"icon-link\" style={{ marginTop: \"20px\" }}>\r\n              <label>Icon Link:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"item-icon\"\r\n                defaultValue={itemsAndTechnology[currentlyOpenedItem].icon}\r\n                onChange={saveChangedItem}\r\n              />\r\n              <a href=\"https://game-icons.net/\">(Get neat icons from here.)</a>\r\n            </form>\r\n            <div\r\n              style={{\r\n                position: \"absolute\",\r\n                top: \"98%\",\r\n                left: \"50%\",\r\n                transform: \"translate(-50%, -50%)\",\r\n              }}\r\n            >\r\n              <button\r\n                onClick={saveChangedItem}\r\n                className=\"button-black\"\r\n                style={{\r\n                  display: \"inline-block\",\r\n                  position: \"relative\",\r\n                  width: \"200px\",\r\n                }}\r\n              >\r\n                Save item\r\n              </button>\r\n              <button\r\n                onClick={deleteItem}\r\n                className=\"button-black\"\r\n                style={{\r\n                  marginLeft: \"10px\",\r\n                  display: \"inline-block\",\r\n                  position: \"relative\",\r\n                  width: \"200px\",\r\n                }}\r\n              >\r\n                Delete item\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <h2\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"45%\",\r\n              left: \"50%\",\r\n              transform: \"translate(-50%, -50%)\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            Choose or create an item in the right sidebar\r\n          </h2>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemsAndTechnology;\r\n","import React, { useState } from \"react\";\r\n\r\nconst SkillsAndSpells = () => {\r\n  return <div>Skills and Spells</div>;\r\n};\r\n\r\nexport default SkillsAndSpells;\r\n","import React, { useState } from \"react\";\r\n\r\nconst MagicSystems = () => {\r\n  return <div>Magic Systems</div>;\r\n};\r\n\r\nexport default MagicSystems;\r\n","import React, { useState } from \"react\";\r\n\r\nconst Professions = () => {\r\n  return <div>Professions</div>;\r\n};\r\n\r\nexport default Professions;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport WorldbuildingNav from \"./components/worldbuilding/WorldbuidlingNav\";\r\nimport Art from \"./components/worldbuilding/Art\";\r\nimport LegendsAndReligions from \"./components/worldbuilding/LegendsAndReligions\";\r\nimport LocationsAndSettings from \"./components/worldbuilding/LocationsAndSettings\";\r\nimport Geography from \"./components/worldbuilding/Geography\";\r\nimport FloraAndFauna from \"./components/worldbuilding/FloraAndFauna\";\r\nimport RacesNationsCultures from \"./components/worldbuilding/RacesNationsCultures\";\r\nimport History from \"./components/worldbuilding/History\";\r\nimport PoliticsAndEconomics from \"./components/worldbuilding/PoliticsAndEconomics\";\r\nimport ItemsAndTechnology from \"./components/worldbuilding/ItemsAndTechnology\";\r\nimport SkillsAndSpells from \"./components/worldbuilding/SkillsAndSpells\";\r\nimport MagicSystems from \"./components/worldbuilding/MagicSystems\";\r\nimport Professions from \"./components/worldbuilding/Professions\";\r\nimport moodboardImage from \"./imgs/moodboard.png\";\r\n\r\nconst Worldbuilding = () => {\r\n  const [currentlyOpenedModule, setCurrentlyOpenedModule] = useState();\r\n  const [worldbuildingObject, setWorldbuildingObject] = useState({\r\n    art: {\r\n      item1: {\r\n        itemid: \"item1\",\r\n        name: \"Sample Art\",\r\n        artist: \"Placeholder Artist Name\",\r\n        description:\r\n          \"This is the artwork's description. Click here to edit the field.\",\r\n        lore: \"This is the artwork's lore.  Click here to edit the field.\",\r\n        icon: \"https://game-icons.net/icons/ffffff/000000/1x1/delapouite/mona-lisa.svg\",\r\n        images: [moodboardImage],\r\n      },\r\n    },\r\n    legendsAndReligions: {\r\n      item1: {\r\n        itemid: \"item1\",\r\n        name: \"Sample Creature\",\r\n        appearance:\r\n          \"This is the creature's appearance. Click here to edit the field.\",\r\n        evolutuion:\r\n          \"This is the evolutionary history of the creature. Click here to edit the field.\",\r\n        utility:\r\n          \"These are the utilities of the creature.  Click here to edit the field.\",\r\n        icon: \"https://game-icons.net/icons/ffffff/000000/1x1/delapouite/church.svg\",\r\n        images: [moodboardImage],\r\n      },\r\n    },\r\n    locationsAndSettings: {\r\n      item1: {\r\n        itemid: \"item1\",\r\n        name: \"Sample Creature\",\r\n        appearance:\r\n          \"This is the creature's appearance. Click here to edit the field.\",\r\n        evolutuion:\r\n          \"This is the evolutionary history of the creature. Click here to edit the field.\",\r\n        utility:\r\n          \"These are the utilities of the creature.  Click here to edit the field.\",\r\n        icon: \"https://game-icons.net/icons/ffffff/000000/1x1/lorc/treasure-map.svg\",\r\n        images: [moodboardImage],\r\n      },\r\n    },\r\n    geography: {\r\n      item1: {\r\n        itemid: \"item1\",\r\n        name: \"Sample Creature\",\r\n        appearance:\r\n          \"This is the creature's appearance. Click here to edit the field.\",\r\n        evolutuion:\r\n          \"This is the evolutionary history of the creature. Click here to edit the field.\",\r\n        utility:\r\n          \"These are the utilities of the creature.  Click here to edit the field.\",\r\n        icon: \"https://game-icons.net/icons/ffffff/000000/1x1/lorc/globe.svg\",\r\n        images: [moodboardImage],\r\n      },\r\n    },\r\n    floraAndFauna: {\r\n      item1: {\r\n        itemid: \"item1\",\r\n        name: \"Sample Creature\",\r\n        appearance:\r\n          \"This is the creature's appearance. Click here to edit the field.\",\r\n        evolutuion:\r\n          \"This is the evolutionary history of the creature. Click here to edit the field.\",\r\n        utility:\r\n          \"These are the utilities of the creature.  Click here to edit the field.\",\r\n        icon: \"https://game-icons.net/icons/ffffff/000000/1x1/darkzaitzev/plants-and-animals.svg\",\r\n        images: [moodboardImage],\r\n      },\r\n    },\r\n    racesNationsCultures: {\r\n      item1: {\r\n        itemid: \"item1\",\r\n        name: \"Sample Creature\",\r\n        appearance:\r\n          \"This is the creature's appearance. Click here to edit the field.\",\r\n        evolutuion:\r\n          \"This is the evolutionary history of the creature. Click here to edit the field.\",\r\n        utility:\r\n          \"These are the utilities of the creature.  Click here to edit the field.\",\r\n        icon: \"https://game-icons.net/icons/ffffff/000000/1x1/delapouite/family-tree.svg\",\r\n        images: [moodboardImage],\r\n      },\r\n    },\r\n    history: {\r\n      item1: {\r\n        itemid: \"item1\",\r\n        name: \"Sample Creature\",\r\n        appearance:\r\n          \"This is the creature's appearance. Click here to edit the field.\",\r\n        evolutuion:\r\n          \"This is the evolutionary history of the creature. Click here to edit the field.\",\r\n        utility:\r\n          \"These are the utilities of the creature.  Click here to edit the field.\",\r\n        icon: \"https://game-icons.net/icons/ffffff/000000/1x1/delapouite/book-pile.svg\",\r\n        images: [moodboardImage],\r\n      },\r\n    },\r\n    politicsAndEconomics: {\r\n      item1: {\r\n        itemid: \"item1\",\r\n        name: \"Sample Creature\",\r\n        appearance:\r\n          \"This is the creature's appearance. Click here to edit the field.\",\r\n        evolutuion:\r\n          \"This is the evolutionary history of the creature. Click here to edit the field.\",\r\n        utility:\r\n          \"These are the utilities of the creature.  Click here to edit the field.\",\r\n        icon: \"https://game-icons.net/icons/ffffff/000000/1x1/delapouite/coins.svg\",\r\n        images: [moodboardImage],\r\n      },\r\n    },\r\n    itemsAndTechnology: {\r\n      item1: {\r\n        itemid: \"item1\",\r\n        name: \"Sample Item\",\r\n        description:\r\n          \"This is the item's description. Click here to edit the field.\",\r\n        lore: \"This is the item's lore.  Click here to edit the field.\",\r\n        icon: \"https://game-icons.net/icons/ffffff/000000/1x1/lorc/tied-scroll.svg\",\r\n        images: [moodboardImage],\r\n      },\r\n    },\r\n    skillsAndSpells: {\r\n      item1: {\r\n        itemid: \"item1\",\r\n        name: \"Sample Creature\",\r\n        appearance:\r\n          \"This is the creature's appearance. Click here to edit the field.\",\r\n        evolutuion:\r\n          \"This is the evolutionary history of the creature. Click here to edit the field.\",\r\n        utility:\r\n          \"These are the utilities of the creature.  Click here to edit the field.\",\r\n        icon: \"https://game-icons.net/icons/ffffff/000000/1x1/delapouite/bolt-spell-cast.svg\",\r\n        images: [moodboardImage],\r\n      },\r\n    },\r\n    magicSystems: {\r\n      item1: {\r\n        itemid: \"item1\",\r\n        name: \"Sample Creature\",\r\n        appearance:\r\n          \"This is the creature's appearance. Click here to edit the field.\",\r\n        evolutuion:\r\n          \"This is the evolutionary history of the creature. Click here to edit the field.\",\r\n        utility:\r\n          \"These are the utilities of the creature.  Click here to edit the field.\",\r\n        icon: \"https://game-icons.net/icons/ffffff/000000/1x1/lorc/magic-gate.svg\",\r\n        images: [moodboardImage],\r\n      },\r\n    },\r\n    professions: {\r\n      item1: {\r\n        itemid: \"item1\",\r\n        name: \"Sample Creature\",\r\n        appearance:\r\n          \"This is the creature's appearance. Click here to edit the field.\",\r\n        evolutuion:\r\n          \"This is the evolutionary history of the creature. Click here to edit the field.\",\r\n        utility:\r\n          \"These are the utilities of the creature.  Click here to edit the field.\",\r\n        icon: \"https://game-icons.net/icons/ffffff/000000/1x1/lorc/anvil-impact.svg\",\r\n        images: [moodboardImage],\r\n      },\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\"worldbuilding\" in localStorage) {\r\n      setWorldbuildingObject(JSON.parse(localStorage.worldbuilding));\r\n    } else {\r\n      localStorage.setItem(\r\n        \"worldbuilding\",\r\n        JSON.stringify(worldbuildingObject)\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"character-module\" class=\"module\">\r\n      <Routes>\r\n        <Route\r\n          path=\"/art\"\r\n          element={\r\n            <Art\r\n              worldbuildingObject={worldbuildingObject}\r\n              setWorldbuildingObject={setWorldbuildingObject}\r\n            />\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/legends-and-religions\"\r\n          element={\r\n            <LegendsAndReligions\r\n              worldbuildingObject={worldbuildingObject}\r\n              setWorldbuildingObject={setWorldbuildingObject}\r\n            />\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/locations-and-settings\"\r\n          element={\r\n            <LocationsAndSettings\r\n              worldbuildingObject={worldbuildingObject}\r\n              setWorldbuildingObject={setWorldbuildingObject}\r\n            />\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/geography\"\r\n          element={\r\n            <Geography\r\n              worldbuildingObject={worldbuildingObject}\r\n              setWorldbuildingObject={setWorldbuildingObject}\r\n            />\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/flora-and-fauna\"\r\n          element={\r\n            <FloraAndFauna\r\n              worldbuildingObject={worldbuildingObject}\r\n              setWorldbuildingObject={setWorldbuildingObject}\r\n            />\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/races-nations-cultures\"\r\n          element={\r\n            <RacesNationsCultures\r\n              worldbuildingObject={worldbuildingObject}\r\n              setWorldbuildingObject={setWorldbuildingObject}\r\n            />\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/history\"\r\n          element={\r\n            <History\r\n              worldbuildingObject={worldbuildingObject}\r\n              setWorldbuildingObject={setWorldbuildingObject}\r\n            />\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/politics-and-economics\"\r\n          element={\r\n            <PoliticsAndEconomics\r\n              worldbuildingObject={worldbuildingObject}\r\n              setWorldbuildingObject={setWorldbuildingObject}\r\n            />\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/items-and-technology\"\r\n          element={\r\n            <ItemsAndTechnology\r\n              worldbuildingObject={worldbuildingObject}\r\n              setWorldbuildingObject={setWorldbuildingObject}\r\n            />\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/skills-and-spells\"\r\n          element={\r\n            <SkillsAndSpells\r\n              worldbuildingObject={worldbuildingObject}\r\n              setWorldbuildingObject={setWorldbuildingObject}\r\n            />\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/magic-systems\"\r\n          element={\r\n            <MagicSystems\r\n              worldbuildingObject={worldbuildingObject}\r\n              setWorldbuildingObject={setWorldbuildingObject}\r\n            />\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/professions\"\r\n          element={\r\n            <Professions\r\n              worldbuildingObject={worldbuildingObject}\r\n              setWorldbuildingObject={setWorldbuildingObject}\r\n            />\r\n          }\r\n        />\r\n      </Routes>\r\n      <WorldbuildingNav\r\n        setCurrentlyOpenedModule={setCurrentlyOpenedModule}\r\n        setWorldbuildingObject={setWorldbuildingObject}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Worldbuilding;\r\n","import \"./App.css\";\r\nimport React, { useState } from \"react\";\r\nimport Characters from \"./Characters\";\r\nimport Plot from \"./Plot\";\r\nimport Worldbuilding from \"./Worldbuilding\";\r\nimport $ from \"jquery\";\r\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\r\n\r\nconst Menu = () => {\r\n  const [current, setCurrent] = useState(\r\n    \"Hi there. I will help you organize and systematize the elements of your novel. Please choose a module below.\"\r\n  );\r\n  let navigate = useNavigate();\r\n\r\n  function handleClick(event) {\r\n    $(\".main-menu\").css({ background: \"white\", color: \"black\" });\r\n    $(event.target).css({ background: \"black\", color: \"white\" });\r\n    $(\r\n      \".worldbuilding-navbtn, #worldbuilding-navigation, #plot-nav, #set-story-arcs, #set-books, .option, #char-choice-buttons\"\r\n    ).removeAttr(\"style\");\r\n    $(\".plot-options\").removeClass(\"white-active-btn\");\r\n\r\n    navigate(event.target.id);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div id=\"current-container\">\r\n        <Routes>\r\n          <Route path=\"/\" element={current} />\r\n          <Route path=\"/characters/*\" element={<Characters />} />\r\n          <Route path=\"/plot/*\" element={<Plot />} />\r\n          <Route path=\"/worldbuilding/*\" element={<Worldbuilding />} />\r\n        </Routes>\r\n      </div>\r\n      <div id=\"main-menu-container\">\r\n        <div className=\"main-menu\" id=\"characters\" onClick={handleClick}>\r\n          Characters\r\n        </div>\r\n        <div className=\"main-menu\" id=\"plot\" onClick={handleClick}>\r\n          Plot\r\n        </div>\r\n        <div className=\"main-menu\" id=\"worldbuilding\" onClick={handleClick}>\r\n          Worldbuilding\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import \"./App.css\";\r\nimport React, { useState } from \"react\";\r\nimport Menu from \"./Menu\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Plotter</h1>\r\n      </header>\r\n      <main>\r\n        <Menu />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n//\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </BrowserRouter>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/moodboard.d8cabf92.png\";"],"sourceRoot":""}